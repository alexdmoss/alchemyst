stages:
- test
- build
- scan
- deploy

variables:
  GOOGLE_CREDENTIALS: "${APP_CI_CREDENTIALS}"

# ------------------ Catalog ----------------- #

include:
  - component: gitlab.com/alexos-dev/gitlab-ci-components/kaniko@~latest
    inputs:
      job-stage: build
      job-suffix: frontend
      job-needs: ["test"]
      image-name: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alchemyst-frontend
      dockerfile: frontend.Dockerfile
  - component: gitlab.com/alexos-dev/gitlab-ci-components/kaniko@~latest
    inputs:
      job-stage: build
      job-suffix: backend
      job-needs: ["test"]
      image-name: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alchemyst-backend
      dockerfile: backend.Dockerfile

  - component: gitlab.com/alexos-dev/gitlab-ci-components/security-scan@~latest
    inputs:
      job-stage: scan
      job-suffix: frontend
      job-needs: ["kaniko-build-frontend"]
      image-name: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alchemyst-frontend
      dockerfile: frontend.Dockerfile
      snyk-language: python
      snyk-library: python
  - component: gitlab.com/alexos-dev/gitlab-ci-components/security-scan@~latest
    inputs:
      job-stage: scan
      job-suffix: backend
      job-needs: ["kaniko-build-backend"]
      image-name: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alchemyst-backend
      dockerfile: backend.Dockerfile
      snyk-language: python
      snyk-library: python

  - component: gitlab.com/alexos-dev/gitlab-ci-components/deploy-k8s@~latest
    inputs:
      job-stage: deploy
      job-suffix: frontend
      job-needs: ["kaniko-build-frontend"]
      app-name: alchemyst-frontend
      namespace: alchemyst
      image-name: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alchemyst-frontend
      manifest-dir: k8s/frontend
  - component: gitlab.com/alexos-dev/gitlab-ci-components/deploy-k8s@~latest
    inputs:
      job-stage: deploy
      job-suffix: backend
      job-needs: ["kaniko-build-backend"]
      app-name: alchemyst-backend
      namespace: alchemyst
      image-name: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alchemyst-backend
      manifest-dir: k8s/backend

# ------------------ Stages ----------------- #

test:
  stage: test
  image: al3xos/python-builder:3.12-debian12 AS builder
  before_script:
    - uv sync --locked
  script:
    - uv run flake8 ./alchemyst  --format junit-xml --output-file=./flake_out_report.xml
    - uv run pytest --cov --cov-report term-missing --cov-report xml:./coverage_out_report.xml --junitxml=./test_out_report.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    reports:
      junit: ./*_out_report.xml
