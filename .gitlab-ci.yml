stages:
- build
- deploy

# ---------------- Variables ---------------- #

# ---------------- Templates ---------------- #

.build:
  only:
  - master
  image: mosstech/gcloud-and-docker:324.0.0
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
  - echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - gcloud auth configure-docker --quiet
  script:
    - docker build -t "${IMAGE_NAME}" -f "${DOCKERFILE}" .
    - docker push "${IMAGE_NAME}"

.deploy:
  only:
  - master
  image: mosstech/ci-tools:latest
  before_script:
  - echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - region=$(gcloud container clusters list --project=${GCP_PROJECT_ID} --filter "NAME=${CLUSTER_NAME}" --format "value(zone)")
  - gcloud container clusters get-credentials ${CLUSTER_NAME} --project=${GCP_PROJECT_ID} --region=${region}

# ------------------ Stages ----------------- #

build-frontend:
  stage: build
  extends:
  - .build
  variables:
    IMAGE_NAME: eu.gcr.io/${GCP_PROJECT_ID}/alchemyst-frontend:${CI_COMMIT_SHA}
    DOCKERFILE: nginx.Dockerfile

build-backend:
  stage: build
  extends:
  - .build
  variables:
    IMAGE_NAME: eu.gcr.io/${GCP_PROJECT_ID}/alchemyst-backend:${CI_COMMIT_SHA}
    DOCKERFILE: backend.Dockerfile

deploy-frontend:
  stage: deploy
  needs:
  - build-frontend
  extends:
  - .deploy
  variables:
    IMAGE_NAME: eu.gcr.io/${GCP_PROJECT_ID}/alchemyst-frontend:${CI_COMMIT_SHA}
  script:
    - ./go deploy-frontend

deploy-backend:
  stage: deploy
  needs:
  - build-backend
  extends:
  - .deploy
  variables:
    IMAGE_NAME: eu.gcr.io/${GCP_PROJECT_ID}/alchemyst-backend:${CI_COMMIT_SHA}
  script:
    - ./go deploy-backend
