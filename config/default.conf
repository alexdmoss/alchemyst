log_format main '{'
	'"time":"$time_iso8601",'
	'"wMethod":"$request_method",'
	'"wResource":"$request_uri",'
	'"wStatus":"$status",'
	'"connectTime":"$upstream_connect_time",'
	'"wDurationSeconds":$request_time,'
	'"wSize":$body_bytes_sent,'
	'"wSrcIP":"$remote_addr",'
	'"wFwdFor":"$http_x_forwarded_for",'
	'"wFwdProto":"$http_x_forwarded_proto",'
	'"wHostHdr":"$http_host",'
	'"wRedirectLocation":"$sent_http_location",'
	'"wReferer":"$http_referer",'
	'"wUserAgent":"$http_user_agent",'
	'"origin":"$origin"}';

access_log /dev/stdout main;

proxy_cache_path /var/cache/nginx/ levels=1:2 keys_zone=alchemyst:10m max_size=200m use_temp_path=off inactive=10d;

server {

  listen 8080 default;
  client_max_body_size 108M;
  server_name alchemyst.co.uk;
  error_log  /var/log/nginx/error.log;
  access_log /var/log/nginx/access.log;
  root /app;
  proxy_set_header Host $http_host;

  # the "via google 1.1 header" turns off default compression. Switch back on!
  gzip on;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # race timeout to avoid race condition with GCP's load balancers
  keepalive_timeout 650;
  keepalive_requests 10000;

  location / {
    proxy_cache alchemyst;
    proxy_cache_bypass $cookie_application_cookie;
    proxy_ignore_headers Cache-Control Expires;
    proxy_pass http://alchemyst-backend:5000;
  }

  location = /js/visits.js {
    proxy_pass https://plausible.alexos.dev/js/plausible.outbound-links.js;
    proxy_buffering on;

    # Cache the script for 6 hours, as long as plausible returns a valid response
    proxy_cache alchemyst;
    proxy_cache_valid 200 6h;
    proxy_cache_use_stale updating error timeout invalid_header http_500;
    add_header X-Cache $upstream_cache_status;

    proxy_set_header Host plausible.alexos.dev;
    proxy_ssl_name plausible.alexos.dev;
    proxy_ssl_server_name on;
    proxy_ssl_session_reuse off;
  }

  # proxy to plausible API - my self-hosted copy
  location = /api/event {
      proxy_pass https://plausible.alexos.dev/api/event;
      proxy_buffering on;
      proxy_http_version 1.1;
      
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;

      proxy_set_header Host plausible.alexos.dev;
      proxy_ssl_name plausible.alexos.dev;
      proxy_ssl_server_name on;
      proxy_ssl_session_reuse off;
  }

}
